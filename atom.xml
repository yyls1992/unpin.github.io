<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Emitting]]></title>
  <subtitle><![CDATA[Keep calm and write code]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://v2cc.github.io/"/>
  <updated>2015-08-31T19:39:34.484Z</updated>
  <id>http://v2cc.github.io/</id>
  
  <author>
    <name><![CDATA[Steve ZHANG]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Model thinking 模型思维课程笔记]]></title>
    <link href="http://v2cc.github.io/2015/08/20/course-notes-of-model-thinking/"/>
    <id>http://v2cc.github.io/2015/08/20/course-notes-of-model-thinking/</id>
    <published>2015-08-20T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.484Z</updated>
    <content type="html"><![CDATA[<p>之前一段时间一直在 Coursera 上刷课，正好赶上了招牌课程之一———— Michigan 大学的 Model Thinking。<br>把自己断断续续做的笔记整理了下，幸好最开始就是用 Markdown 格式保存在 Evernote 里，所以省了很多事。</p>
<h2 id="Model_Thinking_模型思维（中文版）">Model Thinking 模型思维（中文版）</h2><hr>
<p>在本课程中，你将了解如何运用模型进行思考、理解我们生活的这个复杂世界。</p>
<p><strong>Sessions</strong><br>Dec 15th, 2014 - Mar 11th, 2015</p>
<p><strong>Course at a Glance</strong><br>10 weeks of study, 4-8 hours/week, 简体中文 subtitles</p>
<p><strong>Instructors</strong><br><img src="instructors.png" alt=""><br>Scott E. Page<br><a href="https://www.coursera.org/umich" target="_blank" rel="external">University of Michigan</a></p>
<h3 id="Unit_2:_Segregation_&amp;_Peer_Effects">Unit 2: Segregation &amp; Peer Effects</h3><h4 id="2-2_Schelling’s_Segregation_Model_(Micromotives_and_Macrobehavior_微观动机与宏观行为)">2.2 Schelling’s Segregation Model (Micromotives and Macrobehavior 微观动机与宏观行为)</h4><hr>
<p><em>– Micromotives need not be equal to macrobehavior.</em></p>
<p>What’s Schelling’s model about? It’s about people choosing where to live.</p>
<p>This is an Agent Based Model.<br>In an agent based model, you’ve got three things. You’ve got these agents, which in this case will be people. All right, that’s part one. Then you have their behaviors. You have to say, okay, what rules do they follow. That’s part two. And then the third part is, you just add them up.</p>
<p><strong>Key points</strong></p>
<ul>
<li>People want 30 percent of their neighbors to look like them. Starting at 30 percent and, notice we start off 50 percent similar. And only sixteen percent are unhappy. Now 50 percent similar makes sense. Because people are randomly set out there. So half should be like each other and half should be not.What happens is then went up with 72 percent similar. And nobody’s unhappy so the system goes to an equilibrium, but what’s interesting about this if you look at this seven, 72 percent of a person’s neighbors are like them even though people are incredibly tolerant, <strong><em>they only need 30 percent of the people in their neighborhood to be like them. You end up with 70 percent of the people in your neighborhood like you. (二八法则依旧存在）</em></strong><br><img src="2.2.1.png" alt="">  </li>
<li>And so we move this up to 40%. What we end up now is 80 percent of the people end up being similar.</li>
<li>If we ramp this up even more, lets say to 52%, let’s just make it a little over 50%. Now over 60 percent of people are unhappy. That’s because over 60 percent of people have 50 percent or fewer neighbors like them. And if we run this, we get unbelievable segregation. I’ll end up with 94 percent of my neighbors being like me.</li>
<li>So now, people want 80 percent of their neighbors to be like them. And if they’re not, they’re gonna move. We should get massive segregation here, right? Even worse than before. Okay. We don’t. We don’t even get an equilibrium. We get this completely random process. We might see people moving all the time, churning, churning, churning, churning to avoid being around anyone like them.<br><img src="2.2.2.png" alt="">  </li>
<li>Very simple way, that happen at that macro level. Segregation by race, by income, by all sorts of other things, may not be, right? Because of the fact that, at the micro level, people are that intolerant. So the micro and the macro may not align. <strong><em>Micromotives need not be equal to macrobehavior.</em></strong></li>
</ul>
<h4 id="2-3_Measuring_Segregation_(Index_of_Dissimilarity_相异性指数)">2.3 Measuring Segregation (Index of Dissimilarity 相异性指数)</h4><hr>
<p><em>–Sort of take data and understand the world.</em></p>
<p>We can construct a very simple measure called the index of dissimilarity and by using that measure we can compare how segregated different cities are. And now once we’ve got this measure in our pocket we can use it to measure segregation by race, segregation by income, and all sorts of segregation.</p>
<blockquote>
<p><em>b = # blue in block<br>B = # blue total<br>y = # yellow in block<br>Y = # yellow total</em></p>
<p><strong>|b/B - y/Y|/2</strong></p>
</blockquote>
<p><strong>Key points</strong></p>
<ul>
<li>In a 24 city block area here and in each block, I’m going to put ten people. Let’s start out with 12 of these blocks right here, where I put all rich people. And in six of these blocks I put all poor people. And in six of these blocks I put half poor half rich.<br><img src="2.3.1.png" alt="">  </li>
<li>Calculation how distorted the distribution is in that particular block.<br><img src="2.3.2.png" alt="">  </li>
<li>How distorted the distribution are all blocks.<br><img src="2.3.3.png" alt="">  </li>
<li>That last part about dividing by 2 is important. Think of it this way: dividing by 2 is a tool to change the scale of Index of Dissimilarity so that our upper limit will be 1 rather than 2. This makes the Index more convenient, logical, and useful. Dividing by 2 should always be the last step in the calculation of Index of Dissimiarity, meaning there is never any reason to divide by any other number.</li>
<li><strong><em>We get the index of dissimilarity is 36/45.</em></strong></li>
</ul>
<h4 id="2-4_Peer_Effects_(Granovettor’s_Model_格兰诺维特模型)">2.4 Peer Effects (Granovettor’s Model 格兰诺维特模型)</h4><hr>
<p><em>–The tail’s able to wag the dog.</em></p>
<p>There is n individuals to n people. Each person has a threshold. And the expression is how many other people would have to join the movement in order for them to join the movement. So if your threshold is zero, if your threshold is absolutely zero,  that means nobody else has to join. You’re gonna grab your stick and run out there in the streets. If your threshold is 50, then you need to seek 50 people out there before you joining them, before you joining a collective movement. Each person has a different threshold, for, whether they join in and participate in some collective activity.<br>That’s the model.</p>
<p><strong>Key points</strong></p>
<ul>
<li>Suppose you have a group of friends, just like five of you and any one of you, at any given moment in time, could decide to start wearing a purple hat, and there’s a question of do you wear a purple hat? The thresholds are 0, 1, 2, 2, and 2.<br><img src="2.4.1.png" alt="">  </li>
<li>So the person who said the threshold of zero, well they buy the hat, they put it on, because the threshold was zero. Once they buy the hat, the person who’s got a threshold of one buys the hat because one of their friends has the hat so they think, “That’s fine. I’ll wear the hat”. But once the two of them wear the hat, then these three people around here, these three people with a threshold of two, they buy the hat, and everybody ends up buying the hat. You get this collective purple hat movement within your group of five people.<br><img src="2.4.2.png" alt="">  </li>
<li>Three of them have thresholds of one and two of them have thresholds of two. But what happens in this case? Nobody ever buys the hat, because nobody’s got a threshold of one.<br><img src="2.4.3.png" alt="">  </li>
<li>In the case one,the average number of people that’d have to get a hat for someone to get a hat is 1.4. So people are pretty willing to get purple hats but there’s just no one to get it started. In a second case where you’ve got zero, one, two, three, and four, the average value is 2.5. Here you’ve got people who are really, really willing, is not very willing to get hats, but what happens is, they do get the hats because you’ve got this person at zero and this person at one, <strong><em>so the tail’s able to wag the dog.</em></strong><br><img src="2.4.4.png" alt="">  </li>
<li>It matters how much people are willing to participate. How low their thresholds are. But it also matters what that distribution of thresholds are. And if you get more ahead of geneity, more diversity, more people in that tail, really willing to riot, you’re more likely to get a collective action.</li>
</ul>
<p>To be continued soon.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前一段时间一直在 Coursera 上刷课，正好赶上了招牌课程之一———— Michigan 大学的 Model Thinking。<br>把自己断断续续做的笔记整理了下，幸好最开始就是用 Markdown 格式保存在 Evernote 里，所以省了很多事。</p>
<h]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Feedly 等 RSS 工具订阅微信公众号、微博]]></title>
    <link href="http://v2cc.github.io/2015/07/04/read-wechat-weibo-by-rss/"/>
    <id>http://v2cc.github.io/2015/07/04/read-wechat-weibo-by-rss/</id>
    <published>2015-07-04T12:10:33.000Z</published>
    <updated>2015-09-01T03:26:16.140Z</updated>
    <content type="html"><![CDATA[<p>无意中看到两个工具， <strong>RSS Factory</strong> 和 <strong>WeiRSS</strong> 。可以帮助我们使用 RSS 订阅微信公众号，微博账号，知乎日报等，达到统一的阅读体验。</p>
<h2 id="RSS_Factory">RSS Factory</h2><p>RSS Factory 是用于生成微博、微信公众号及知乎日报的 RSS 链接的 Web APP。</p>
<blockquote>
<p>Author: Timmy Chu<br>Website: <a href="https://diy-devz.rhcloud.com/" target="_blank" rel="external">diy-devz.rhcloud.com</a><br>Github: <a href="https://github.com/zhu327/rss" target="_blank" rel="external">zhu327/rss</a></p>
</blockquote>
<h3 id="S1-_查找微信公众号">S1. 查找微信公众号</h3><p>搜狗提供了微信公众号搜索服务，我们这里要用到它。<br>打开网站 <a href="http://weixin.sogou.com/" target="_blank" rel="external">weixin.sogou.com</a> ，搜索需要订阅的公众号。</p>
<p><img src="rss_s1.png" alt=""></p>
<h3 id="S2-_获取_Open_ID">S2. 获取 Open ID</h3><p>搜索结果的网址中，提取 <code>openid=</code> 之后的字段</p>
<p><img src="rss_s2.png" alt=""></p>
<h3 id="S3-_Feedly_订阅_RSS_链接">S3. Feedly 订阅 RSS 链接</h3><p>使用上一步获得的 Open ID ，在 RSS Factory 中生成订阅链接</p>
<p><img src="rss_s3.png" alt=""></p>
<p>最后，使用 Feedly 等 RSS 工具订阅此链接即可。<br>订阅微博账号同样比较简单， RSS Factory 有现成的教程，有兴趣可以查看。</p>
<p>由于作者开源了 RSS Factory 的源码，我们何以使用自己的服务器搭建该工具，教程及源码参看前文提供的 Github 地址。</p>
<h2 id="WeiRSS">WeiRSS</h2><p>第二个工具是 WeiRSS，只能用于生成微信公众号 RSS 链接。但是其网站上推荐了依一些热门订阅的公众号，还是比较实用的。</p>
<blockquote>
<p>Author: Berry &amp;&amp; TaoAlpha<br>Website: <a href="http://weirss.me/" target="_blank" rel="external">weirss.me</a><br>Github: <a href="https://github.com/iberryful/weixin_sogou" target="_blank" rel="external">iberryful/weixin_sogou</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>无意中看到两个工具， <strong>RSS Factory</strong> 和 <strong>WeiRSS</strong> 。可以帮助我们使用 RSS 订阅微信公众号，微博账号，知乎日报等，达到统一的阅读体验。</p>
<h2 id="RSS_Factory">RS]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Setting up shadowsocks proxy to visit Google FB and etc.]]></title>
    <link href="http://v2cc.github.io/2015/04/20/setting-up-ss-proxy/"/>
    <id>http://v2cc.github.io/2015/04/20/setting-up-ss-proxy/</id>
    <published>2015-04-20T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p><strong><em>(Considering the Wall’s ability to block keyword, this column will evade sensitive words and be writen in English.)</em></strong></p>
<p>You know, we are often stuck in the life, even in the Internet.<br>As a heavy Internet user, I need to visit Google, Android Developer and Github sites by high frequency. But these sites cannot be accessed normally in my country.<br>After comparing the advantages and disadvantages of many solutions, I choose to set up shadowsocks proxy on foreign server.<br>I will share my experience on passing each stage. Hope it works for you.</p>
<h2 id="Catalogue">Catalogue</h2><hr>
<ul>
<li><a href="#Wiki">Wiki</a></li>
<li><a href="#Server Side Install">Server Side Install</a></li>
<li><a href="#Configure and start the service">Configure and start the service</a></li>
<li><a href="#Optional: Optimizing Shadowsocks">Optional: Optimizing Shadowsocks</a></li>
<li><a href="#Optional: Optional: Zeta-TCP">Optional: Optional: Zeta-TCP</a></li>
<li><a href="#Clients on Windows">Clients on Windows</a></li>
</ul>
<h2 id="Wiki">Wiki</h2><hr>
<p>A foreign server is required firstly.  I choosed a VPS which region of DigitalOcean server is San Francisco.<br>Recommended VPS:<br><a href="https://www.digitalocean.com/?refcode=4cac58a4d0a0" target="_blank" rel="external">DigitalOcean</a> Provide cloud hosting in the US and Singapore, Low-cost, Default Support for TCP Hybla, take Paypal.<br><a href="https://www.linode.com/" target="_blank" rel="external">Linode</a> Provide cloud hosting in Japan and the US, High Bandwidth</p>
<p><strong>Shadowsocks-libev</strong> is a lightweight secured socks5 proxy for embedded devices and low end boxes.<br>You can visit official site at <a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">github.com/shadowsocks/shadowsocks-libev</a> to see more introduction.</p>
<p><strong>Cow</strong> is HTTP proxy and written in Go. It can automatically identify blocked sites and use parent proxies to access.<br>Official website: <a href="https://github.com/cyfdecyf/cow" target="_blank" rel="external">github.com/cyfdecyf/cow</a></p>
<p><strong>TCP Hybla</strong> is a TCP enhancement for heterogeneous networks.</p>
<h2 id="Server_Side_Install">Server Side Install</h2><hr>
<h3 id="Debian_&amp;_Ubuntu">Debian &amp; Ubuntu</h3><p>Build package from source </p>
<pre><code>apt-<span class="built_in">get</span> install build-essential autoconf libtool libssl-dev gawk debhelper git
git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/madeye/shadowsocks-libev.git
<span class="keyword">cd</span> shadowsocks-libev
dpkg-buildpackage -us -uc
</code></pre><p>Install <code>shadowsocks-libev</code> </p>
<pre><code><span class="title">cd</span> ..
dpkg -i shadowsocks-libev<span class="regexp">*.deb</span>
</code></pre><p>Install <code>supervisor</code> </p>
<pre><code>apt-<span class="keyword">get</span> install supervisor
</code></pre><h2 id="Configure_and_start_the_service">Configure and start the service</h2><hr>
<p>Edit the <code>shadowsocks-libev</code> configuration</p>
<pre><code>vi <span class="regexp">/etc/</span>shadowsocks-libev<span class="regexp">/config.json</span>
</code></pre><p>With the following content:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">     "<span class="attribute">server</span>":<span class="value"><span class="string">"0.0.0.0"</span></span>,</span><br><span class="line">     "<span class="attribute">server_port</span>":<span class="value"><span class="number">443</span></span>,</span><br><span class="line">     "<span class="attribute">password</span>":<span class="value"><span class="string">"password"</span></span>,</span><br><span class="line">     "<span class="attribute">method</span>":<span class="value"><span class="string">"aes-256-cfb"</span></span>,</span><br><span class="line">     "<span class="attribute">timeout</span>":<span class="value"><span class="number">300</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>Edit the <code>supervisor</code> configuration</p>
<pre><code>vi /etc/supervisor/<span class="keyword">conf</span>.<span class="keyword">d</span>/shadowsocks-libev.<span class="keyword">conf</span>
</code></pre><p>With the following content:</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[program:shadowsocks-libev]</span></span><br><span class="line"><span class="setting">command=<span class="value">ss-server -c /etc/shadowsocks-libev/config.json -u</span></span></span><br><span class="line"><span class="setting">autorestart=<span class="value"><span class="keyword">true</span></span></span></span><br><span class="line"><span class="setting">user=<span class="value">nobody</span></span></span><br></pre></td></tr></table></figure>
<p>If  the <code>server_Port</code> &lt; 1024 in <code>config.json</code>, change <code>user=nobody</code> to <code>user=root</code>.</p>
<p>Restart the <code>supervisor</code></p>
<pre><code><span class="title">service</span> supervisor restart
supervisorctl reload
</code></pre><p>After edit any files on <code>/etc/supervisor/*</code>, update <code>supervisor</code> configuration:</p>
<pre><code><span class="title">supervisorctl</span> update
</code></pre><p>Make sure if <code>shadowsocks-libev</code> is listening to the correct port: </p>
<pre><code><span class="title">netstat</span> -lnp
</code></pre><h2 id="Optional:_Optimizing_Shadowsocks">Optional: Optimizing Shadowsocks</h2><hr>
<h3 id="Debian_&amp;_Ubuntu-1">Debian &amp; Ubuntu</h3><p>Create /etc/sysctl.d/local.conf with the following content:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># max open files</span></span><br><span class="line">fs.file-max = <span class="number">51200</span></span><br><span class="line"><span class="preprocessor"># max read buffer</span></span><br><span class="line">net.core.rmem_max = <span class="number">67108864</span></span><br><span class="line"><span class="preprocessor"># max write buffer</span></span><br><span class="line">net.core.wmem_max = <span class="number">67108864</span></span><br><span class="line"><span class="preprocessor"># default read buffer</span></span><br><span class="line">net.core.rmem_default = <span class="number">65536</span></span><br><span class="line"><span class="preprocessor"># default write buffer</span></span><br><span class="line">net.core.wmem_default = <span class="number">65536</span></span><br><span class="line"><span class="preprocessor"># max processor input queue</span></span><br><span class="line">net.core.netdev_max_backlog = <span class="number">4096</span></span><br><span class="line"><span class="preprocessor"># max backlog</span></span><br><span class="line">net.core.somaxconn = <span class="number">4096</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># resist SYN flood attacks</span></span><br><span class="line">net.ipv4.tcp_syncookies = <span class="number">1</span></span><br><span class="line"><span class="preprocessor"># reuse timewait sockets when safe</span></span><br><span class="line">net.ipv4.tcp_tw_reuse = <span class="number">1</span></span><br><span class="line"><span class="preprocessor"># turn off fast timewait sockets recycling</span></span><br><span class="line">net.ipv4.tcp_tw_recycle = <span class="number">0</span></span><br><span class="line"><span class="preprocessor"># short FIN timeout</span></span><br><span class="line">net.ipv4.tcp_fin_timeout = <span class="number">30</span></span><br><span class="line"><span class="preprocessor"># short keepalive time</span></span><br><span class="line">net.ipv4.tcp_keepalive_time = <span class="number">1200</span></span><br><span class="line"><span class="preprocessor"># outbound port range</span></span><br><span class="line">net.ipv4.ip_local_port_range = <span class="number">10000</span> <span class="number">65000</span></span><br><span class="line"><span class="preprocessor"># max SYN backlog</span></span><br><span class="line">net.ipv4.tcp_max_syn_backlog = <span class="number">4096</span></span><br><span class="line"><span class="preprocessor"># max timewait sockets held by system simultaneously</span></span><br><span class="line">net.ipv4.tcp_max_tw_buckets = <span class="number">5000</span></span><br><span class="line"><span class="preprocessor"># turn on TCP Fast Open on both client and server side</span></span><br><span class="line">net.ipv4.tcp_fastopen = <span class="number">3</span></span><br><span class="line"><span class="preprocessor"># TCP receive buffer</span></span><br><span class="line">net.ipv4.tcp_rmem = <span class="number">4096</span> <span class="number">87380</span> <span class="number">67108864</span></span><br><span class="line"><span class="preprocessor"># TCP write buffer</span></span><br><span class="line">net.ipv4.tcp_wmem = <span class="number">4096</span> <span class="number">65536</span> <span class="number">67108864</span></span><br><span class="line"><span class="preprocessor"># turn on path MTU discovery</span></span><br><span class="line">net.ipv4.tcp_mtu_probing = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># for high-latency network</span></span><br><span class="line">net.ipv4.tcp_congestion_control = hybla</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># for low-latency network, use cubic instead</span></span><br><span class="line"><span class="preprocessor"># net.ipv4.tcp_congestion_control = cubic</span></span><br></pre></td></tr></table></figure>
<p>Then:</p>
<pre><code>sysctl <span class="comment">--system</span>
</code></pre><p><strong>Warning: DO NOT ENABLE <code>net.ipv4.tcp_tw_recycle</code>!!!</strong></p>
<p>If you use <code>Supervisor</code>, make sure you have the following line in <code>/etc/default/supervisor</code>:</p>
<pre><code><span class="built_in">ulimit</span> -n <span class="number">51200</span>
</code></pre><p>Once you added that line, restart <code>Supervisor</code></p>
<pre><code>service <span class="built_in">stop</span> supervisor &amp;&amp; service <span class="built_in">start</span> supervisor
</code></pre><p>See more info at the Sourse: <a href="https://github.com/shadowsocks/shadowsocks/wiki/Optimizing-Shadowsocks" target="_blank" rel="external">Optimizing-Shadowsocks</a></p>
<h2 id="Optional:_Zeta-TCP">Optional: Zeta-TCP</h2><hr>
<p>Now, Serverspeeder provid a free Zeta-TCP service. We can deploy it on our server to  improve the end-to-end performance of TCP.</p>
<p>Install</p>
<pre><code>wget http:<span class="comment">//my.serverspeeder.com/d/ls/serverSpeederInstaller.tar.gz</span>
tar xzvf serverSpeederInstaller<span class="class">.tar</span><span class="class">.gz</span>
bash serverSpeederInstaller.sh
</code></pre><p>Input your Serverspeeder account and press <code>Enter</code> to keep default for others settings during the installation process.<br><img src="serverspeeder.png" alt=""></p>
<p>Some configuration</p>
<pre><code>vi <span class="regexp">/serverspeeder/</span>etc<span class="regexp">/config</span>
</code></pre><p>rsc=”1”, RSC 网卡驱动模式<br>advinacc=”1”, 流量方向加速<br>maxmode=”1”, 最大传输模式</p>
<p>Restart service</p>
<pre><code>/serverspeeder/bin/serverSpeeder<span class="class">.sh</span> stop
/serverspeeder/bin/serverSpeeder<span class="class">.sh</span> start
</code></pre><h2 id="Clients_on_Windows">Clients on Windows</h2><hr>
<p>Cow: <a href="http://dl.chenyufei.info/cow/cow-win32-0.9.4.zip" target="_blank" rel="external">X32</a>,<a href="http://dl.chenyufei.info/cow/cow-win64-0.9.4.zip" target="_blank" rel="external">X64</a></p>
<p>Edit <code>rc.txt (Windows)</code> with the following content:</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 本地 HTTP 代理地址</span></span><br><span class="line"><span class="preprocessor"># 配置 HTTP 和 HTTPS 代理时请填入该地址</span></span><br><span class="line"><span class="preprocessor"># 或者在自动代理配置中填入 http://127.0.0.1:7777/pac</span></span><br><span class="line">listen = http:<span class="comment">//127.0.0.1:7777</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># shadowsocks 二级代理</span></span><br><span class="line">proxy = ss:<span class="comment">//aes-256-cfb:password@1.2.3.4:443</span></span><br></pre></td></tr></table></figure>
<p>Then, open <code>Internet Explorer</code>, click on <code>Tools</code>, <code>Internet Options</code>.<br>After seeing the <code>Internet Options</code> window, click on <code>Connections</code>, <code>LAN settings</code>.<br>Checked <code>Use automatic configuration script</code>, fill in <code>Address</code> box with the following content:</p>
<pre><code><span class="string">http:</span><span class="comment">//127.0.0.1:7777/pac</span>
</code></pre><p>Peference picture<br><img src="IE-PAC-proxy.jpg" alt=""></p>
<p>Closed.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong><em>(Considering the Wall’s ability to block keyword, this column will evade sensitive words and be writen in English.)</em></str]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime Text 3 采用 Markdown 格式编辑 Evernote（印象笔记）]]></title>
    <link href="http://v2cc.github.io/2014/11/10/edit-evernote-with-sublime-text/"/>
    <id>http://v2cc.github.io/2014/11/10/edit-evernote-with-sublime-text/</id>
    <published>2014-11-10T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p>由于跨平台的 Evernote（印象笔记）体验实在愉悦，近期把知识管理、笔记记录的主要工具从 Onenote 切换到了 Evernote。<br>美中不足的是，原生的编辑功能对常接触代码及表格的我来说比较单薄，排版又略复杂。不过幸运的事有3件：</p>
<p>Evernote（印象笔记）提供了 API，供第三方应用管理笔记。<br>这世界上有 markdown 这样舒服的标记语言。<br>美妙的 IDE —— Sublime Text</p>
<p>得益于上述三件幸运的事，使得我们可以十分方便的在 Sublime Text 中，利用 markdown 格式编辑修改 Evernote（印象笔记）中的笔记。</p>
<hr>
<h2 id="安装_Sublime_Text_3">安装 Sublime Text 3</h2><p>Sublime Text 3 是一款共享性质的编辑器，比记事本强大、美观，又比常规 IDE 轻巧、灵活。同时针对个人非商业用途的用户免费，请自行前往<a href="http://www.sublimetext.com/3" target="_blank" rel="external">官网下载</a> Sublime Text 3。</p>
<p>注意，Evernote 插件只支持 Sublime Text 3，所以请不要下载成 Sublime Text 2.</p>
<p>安装好 Sublime Text 3 后需要为其添加插件管理功能 Package Control。</p>
<p><strong>自动安装：</strong></p>
<ol>
<li>通过快捷键 <code>ctrl+`` 或者</code>View &gt; Show Console` 菜单打开控制台  </li>
<li>粘贴以下代码后回车</li>
</ol>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">import</span> urllib.request,os,hashlib; h = '<span class="number">7183</span>a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path<span class="params">()</span>; urllib.request.install_opener<span class="params">( urllib.request.build_opener<span class="params">( urllib.request.ProxyHandler<span class="params">()</span>)</span> )</span>; by = urllib.request.urlopen<span class="params">( 'http://packagecontrol.io/' + pf.replace<span class="params">(' ', '%<span class="number">20</span>')</span>)</span>.read<span class="params">()</span>; dh = hashlib.sha256<span class="params">(by)</span>.hexdigest<span class="params">()</span>; print<span class="params">('Error validating download <span class="params">(got %s instead of %s)</span>, please try manual install' % <span class="params">(dh, h)</span>)</span> <span class="keyword">if</span> dh <span class="built_in">!</span>= h <span class="keyword">else</span> open<span class="params">(os.path.join<span class="params">( ipp, pf)</span>, 'wb' )</span>.write<span class="params">(by)</span></span><br></pre></td></tr></table></figure>
<p><strong>手动安装：</strong></p>
<ol>
<li>点击 <code>Preferences &gt; Browse Packages…</code> 菜单  </li>
<li>进入 <code>Installed Packages/</code> 目录  </li>
<li>下载 <a href="https://sublime.wbond.net/Package%20Control.sublime-package" target="_blank" rel="external">Package Control.sublime-package</a>，并复制文件到 <code>Installed Packages/</code> 目录  </li>
<li>重启 Sublime Text</li>
</ol>
<h2 id="安装_Evernote_插件">安装 Evernote 插件</h2><p>打开 Sublime Text 后，<code>cmd + shift + P</code> 打开 Package Control，输入 <code>install</code>，跳出插件库，然后输入 <code>Evernote</code>  安装 Evernote 插件。该插件的介绍和详细的使用说明请参考：<a href="https://sublime.wbond.net/packages/Evernote" target="_blank" rel="external">插件介绍</a>。</p>
<p>插件安装完成之后，第一次使用时需要进行授权认证。步骤如下：</p>
<ol>
<li>打开 Package Control，输入 <code>send to evernote</code>，在窗口底部会弹出一个小窗口，窗口中的内容为一个带 token 的链接。该 token 后面用到。  </li>
<li>Evernote 国际版用户，将链接复制到浏览器并访问，登录授权后，会有一个 NoteStore URL。<br>印象笔记用户，直接用浏览器访问链接：<a href="https://app.yinxiang.com/api/DeveloperToken.action" target="_blank" rel="external">https://app.yinxiang.com/api/DeveloperToken.action</a>，进行登陆授权，并记录 token 和 NoteStore URL。  </li>
<li>打开 Sublime Text，打开 <code>Preferences &gt; Package Settings &gt; Evernote &gt; Settings User</code>，将上步骤中的 token 和 NoteStore URL 复制到对应位置。参照格式如下：</li>
</ol>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	"<span class="attribute">noteStoreUrl</span>": <span class="value"><span class="string">"这里填入你的 NoteStore URL"</span></span>,</span><br><span class="line">	"<span class="attribute">token</span>": <span class="value"><span class="string">"这里填入你的 token"</span></span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>好了，Sublime Text 已经可以访问你的 Evernote 笔记了。</p>
<h2 id="编辑方法">编辑方法</h2><p><code>cmd + shift + P</code> 打开 Package Control，输入 <code>evernote</code>，就能看到所有功能选项了，这里介绍几个比较常用的选项功能。</p>
<p><strong>Evernote: New empty note</strong></p>
<p>新建一个笔记。点选后弹出选单可以选择在哪个笔记本下建立笔记。</p>
<p><strong>Evernote: Open Evernote note</strong></p>
<p>打开一个已存在的笔记。点选后弹出菜单可以选择打开任何已存在笔记。</p>
<p><strong>Evernote: Update Evernote note</strong></p>
<p>更新当前编辑的笔记到 Evernote。</p>
<p>更多功能请大家自行发掘。</p>
<h2 id="Markdown_扩展">Markdown 扩展</h2><p>支持 Evernote 的待办事项，格式如下：</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> [ ] <span class="constant">Unchecked</span></span><br><span class="line"></span>-<span class="ruby"> [x] <span class="constant">Checked</span></span></span><br></pre></td></tr></table></figure>
<p>支持表格，但需在 <code>Settings – User</code> 中加入配置 <code>&quot;wiki_tables&quot;: &quot;true&quot;</code>。格式如下：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">||<span class="string"> *Year* </span>||<span class="string"> *Temperature (low)* </span>||<span class="string"> *Temperature (high)* </span>||</span><br><span class="line">||<span class="string"> 1900 </span>||<span class="string"> -10 </span>||<span class="string"> 25 </span>||</span><br><span class="line">||<span class="string"> 1910 </span>||<span class="string"> -15 </span>||<span class="string"> 30 </span>||</span><br></pre></td></tr></table></figure>
<p>更多信息参考官方文档 <a href="https://github.com/bordaigorl/sublime-evernote/wiki/Supported-Markdown" target="_blank" rel="external">Supported-Markdown</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于跨平台的 Evernote（印象笔记）体验实在愉悦，近期把知识管理、笔记记录的主要工具从 Onenote 切换到了 Evernote。<br>美中不足的是，原生的编辑功能对常接触代码及表格的我来说比较单薄，排版又略复杂。不过幸运的事有3件：</p>
<p>Evernot]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 下使用 Shadowsocks + Supervisor + Privoxy 配置稳定的客户端代理]]></title>
    <link href="http://v2cc.github.io/2014/08/09/shadowsocks-to-http/"/>
    <id>http://v2cc.github.io/2014/08/09/shadowsocks-to-http/</id>
    <published>2014-08-09T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<h2 id="写在前面：">写在前面：</h2><p>因为一些众所周知的原因，国外众多优秀服务在中国访问起来总需要借助梯子的帮助。<br>最近一直在使用 Shadowsocks 作为梯子，这里简单介绍下其有点。</p>
<ol>
<li>Shadowsocks 在 Win、Mac、Linux、Android、IOS 各平台都能使用。 </li>
<li>相比与 VPN，影梭（Shadowsocks）在移动设备上更节约电力。 VPN 会使设备保持数据长连接，移动设备上网络连接不能按需中断，因此耗电高。 </li>
<li>具有多种加密方式。</li>
</ol>
<p>这里整理了下，在 Ubuntu 上如何借助 Shadowsocks + Supervisor + Privoxy 打造稳定梯子环境。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">Supervisor</span> 能方便的管理服务的自启动。</span><br><span class="line">由于 Linux 上没有类似其它平台的 Shadowsocks Gui 客户端，所以每次使用要手动启动代理服务，非常麻烦。</span><br><span class="line">Supervisor 的作用就是自动启动  Shadowsocks 代理服务。</span><br><span class="line"></span><br><span class="line">Privoxy 是一个智能代理切换软件。Shadowsocks 提供的是 Sock5 代理，而例如 Dropbox 等软件不支持 Socks5 代理，只支持 HTTP 代理。</span><br><span class="line">我们就需要用到 Privoxy，转发 Sock5 为更普遍的 HTTP代理。</span><br></pre></td></tr></table></figure>
<h2 id="准备工作：">准备工作：</h2><ol>
<li>一台部署有 Shadowsocks 的境外代理服务器。可以自己花钱买一个最低配的，一个月30块钱就能畅游全球互联网。<br>如果直接购买了别人配置好的代理使用，可以直接看下一步， <em>安装步骤</em> 。 </li>
<li>配置好境外代理服务器上的代理服务，只需按照下面的 <em>安装步骤</em> 中 Shadowsocks 配置、Supervisor 配置以及启动代理的步骤即可。<br>其中 Supervisor 配置中 sslocal 替换为 ssserver 即可。 </li>
<li>本地系统为 Ubuntu 14.04，验证通过。</li>
</ol>
<h2 id="安装步骤：">安装步骤：</h2><p>安装代理工具 Shadowsocks-python 版和后台进程管理器 Supervisor 来设置代理和管理服务的自启动。<br>然后通过 Privoxy 来将 Shadowsocks 的 Socket 转换成 HTTP 代理。</p>
<pre><code>sudo apt-<span class="built_in">get</span> <span class="keyword">update</span>
sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-pip <span class="keyword">python</span>-m2crypto supervisor privoxy
sudo pip install shadowsocks
</code></pre><h2 id="相关配置：">相关配置：</h2><h4 id="Shadowsocks配置：">Shadowsocks配置：</h4><pre><code>sudo mkdir -p <span class="regexp">/etc/</span>shadowsocks
sudo gedit <span class="regexp">/etc/</span>shadowsocks<span class="regexp">/config.json</span>
</code></pre><p>config.json配置内容为：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"server"</span>:<span class="string">"bot02.rom.mk"</span>, <span class="comment">//（你的代理服务器IP或域名地址）</span></span><br><span class="line">	<span class="string">"server_port"</span>:<span class="number">8388</span>, <span class="comment">//（代理服务器上监听的端口号）</span></span><br><span class="line">	<span class="string">"local_port"</span>:<span class="number">1080</span>, <span class="comment">//（本地的监听端口号）</span></span><br><span class="line">	<span class="string">"password"</span>:<span class="string">"xiaobaibiechao"</span>, <span class="comment">//（代理服务器的密码）</span></span><br><span class="line">	<span class="string">"timeout"</span>:<span class="number">400</span>,</span><br><span class="line">	<span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span> <span class="comment">//（加密方式）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Supervisor配置：">Supervisor配置：</h4><pre><code>sudo <span class="keyword">mkdir</span> -p /etc/supervisor/<span class="keyword">conf</span>.<span class="literal">d</span>
sudo gedit /etc/supervisor/<span class="keyword">conf</span>.<span class="keyword">d</span>/shadowsocks.<span class="keyword">conf</span>
</code></pre><p>shadowsocks.conf配置内容为：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[program:shadowsocks]</span></span><br><span class="line"><span class="setting">command=<span class="value">sslocal -c /etc/shadowsocks/config.json</span></span></span><br><span class="line"><span class="setting">autorestart=<span class="value"><span class="keyword">true</span></span></span></span><br><span class="line"><span class="setting">user=<span class="value">nobody</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Privoxy配置：">Privoxy配置：</h4><pre><code>sudo vi <span class="regexp">/etc/</span>privoxy<span class="regexp">/config</span>
</code></pre><p>内容最末尾另起一行输入 </p>
<pre><code>forward-socks5 / <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">1080</span> .
</code></pre><p><code>forward-socks5</code> 代表转发到 Socks5 代理，<code>/</code> 代表所有的 URL 都转发，<br><code>127.0.0.1:1080</code> 是 Socks 代理的位置，最后的一点 <code>.</code> 代表没有 HTTP 代理，具体请上官网查阅。<br>保存即生效。</p>
<p>现在的 <code>127.0.0.1:8118</code> 就是一个HTTP 代理了。<code>8118</code> 是 Privoxy 默认的端口。</p>
<h4 id="启动代理和相关服务：">启动代理和相关服务：</h4><pre><code><span class="title">sudo</span> service privoxy restart
sudo service supervisor restart
sudo supervisorctl reload
</code></pre><p>最后在软件中设置代理使用即可。</p>
<h2 id="写在最后：">写在最后：</h2><p>本文为参考了 Martincz 在 MoKee OpenSource Project 原创首发的 <a href="http://www.mokeedev.com/2014/07/23/syncandroidsource/" target="_blank" rel="external">使用Shadowsocks+Supervisor+Privoxy打造Ubuntu下稳定的Android源码同步环境</a>。</p>
<p>再提供一篇对各梯子介绍比较详细的文章，供大家参考： <a href="http://cokebar.info/archives/236" target="_blank" rel="external">目前热门科学上网方式介绍及优缺点简评</a>。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="写在前面：">写在前面：</h2><p>因为一些众所周知的原因，国外众多优秀服务在中国访问起来总需要借助梯子的帮助。<br>最近一直在使用 Shadowsocks 作为梯子，这里简单介绍下其有点。</p>
<ol>
<li>Shadowsocks 在 Win、Ma]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[像 Geek 一样写作（一）：用 Jekyll + Github + Markdown 搭建 Blog 的介绍]]></title>
    <link href="http://v2cc.github.io/2014/07/09/write-blog-like-geek-1/"/>
    <id>http://v2cc.github.io/2014/07/09/write-blog-like-geek-1/</id>
    <published>2014-07-09T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p>在互联网愈来开放自由的今天，通过 Blog 表达自己的声音成为越来越大众化的事情。<br>于是涌现出了琳琅满目的个人 Blog 方案，对于选择恐惧症来讲，这真是最坏的年代。<br>让我赶快摇个骰（tóu，这里突然发现原来是读 “tóu” ，文盲到鼻酸）子吧。</p>
<p>最后选择了 Jekyll + Github 这种托管方式，搭建一个静态、版本可控、便于分享的 Blog (其实真实原因是作为一个码农，我觉得这样能略微提升自己在云云众码农中的逼格)。Blog 的写作，则采用 Markdwon 格式，专注快捷。<br>因为 Github 美好的开源特性，对本站感兴趣的同学可以很方便的查看全部源码，并 clone 自用。</p>
<p>搭建过程对熟悉 git 和 front-end 的来说非常轻松，所以本篇文章主要站在完全初次接触二者的角度来做讲解。</p>
<h3 id="何为_Github">何为 Github</h3><p>对个人用户来讲，Github 是一个云平台，能方便的对项目或文件进行版本管理，让我们不必再担心备份与恢复，一切提交，均有记录。</p>
<p><em>补充介绍</em><br>Github 的本意，是一个针对开源代码的云仓库，用于代码版本的协同管理。这不妨碍我们把它活用为 Blog 服务的托管服务器。事实上，Github 主动为个人或项目提供了 Pages 这项服务，才使本方案成为可能。不得不感叹 Github 的诚意满满。</p>
<ul>
<li><a href="https://github.com/" target="_blank" rel="external">Github.com</a></li>
</ul>
<h3 id="何为_Markdown">何为 Markdown</h3><p>简单来说 Markdown 就是向纯文本中有规则的添加某些符号。更简单的说法就是我们常见的 “.txt” 文件，把它重命名成 “.md” 就叫新名字 Markdown 文件啦。</p>
<p>当然 Markdown 的重点就是添加符号的规则，该怎么加符号呢。<br>基础就是 “ # “, “ * “, “ - “, “ ` “, “ &gt; “ 五个符号。</p>
<p>当我们要写一篇文章的大标题，就这样  </p>
<pre><code><span class="preprocessor">#  我是大标题</span>
</code></pre><p>然后在 Blog 中的显示效果就是  </p>
<h1 id="我是大标题">我是大标题</h1><p>够不够大 :)<br>类似，当我们需要小二标题、小三标题等等，就这样  </p>
<pre><code><span class="preprocessor">##  我是小二标题  </span>
<span class="preprocessor">###  我是小三标题</span>
</code></pre><p>在 Blog 中的显示效果就是  </p>
<h2 id="我是小二标题">我是小二标题</h2><h3 id="我是小三标题">我是小三标题</h3><p>其他几个符号也各有用处。有了这五个基础符号，就能完成本 Blog 大部分的格式整齐的文章啦。</p>
<p><em>补充介绍</em><br>Markdown 的完整教程由于篇幅就不展开了，给出链接，大家可以前去学习。</p>
<ul>
<li><a href="http://markdown.tw/" target="_blank" rel="external">Markdown 语法中译</a></li>
<li><a href="https://stackedit.io/" target="_blank" rel="external">Markdown 在线写作神器 Stackedit</a></li>
</ul>
<h3 id="又何为_Jekyll">又何为 Jekyll</h3><p>Jekyll 作用是把我们放在 Github 服务器上的零散文件组合、转换为精美的静态网页。<br>上文我们写的  </p>
<pre><code><span class="preprocessor">#  我是大标题</span>
</code></pre><p>就是 Jekyll “噗” 的一下把它变成  </p>
<h1 id="我是大标题-1">我是大标题</h1><p><em>补充介绍</em><br>熟悉 front-end 开发，又想制作独一无二的精美 Blog 的同学，可以参看 Jekyll 官方文档。图省事的就像我一样，直接用别人制作的模板吧。</p>
<ul>
<li><a href="http://jekyllrb.com/docs/home/" target="_blank" rel="external">Jekyll Docs</a></li>
</ul>
<hr>
<p>本篇内容讲到这，Blog 的搭建过程放在下一篇 [像 Geek 一样写作 (二) ] 中。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在互联网愈来开放自由的今天，通过 Blog 表达自己的声音成为越来越大众化的事情。<br>于是涌现出了琳琅满目的个人 Blog 方案，对于选择恐惧症来讲，这真是最坏的年代。<br>让我赶快摇个骰（tóu，这里突然发现原来是读 “tóu” ，文盲到鼻酸）子吧。</p>
<p>]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[重读《挪威的森林》]]></title>
    <link href="http://v2cc.github.io/2014/07/02/norwegian-wood/"/>
    <id>http://v2cc.github.io/2014/07/02/norwegian-wood/</id>
    <published>2014-07-02T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<h2 id="Chapter-_One">Chapter. One</h2><p>遇上晚上停电，闲得无聊，打开手机里放置很久的 <em>《挪威的森林》</em> 品读起来。</p>
<p>关于此书的印象早已全部失却，读起来却依然惊人顺畅——5个小时，从头至尾。熄灭手机屏幕，无光的房间格外冷清。</p>
<p>第一次接触村上春树的书是在 2007 年，我上高一，有充沛的时间以及大把无法宣泄的精力。一目十行得读完从图书馆借来  <em>《挪威的森林》</em>，我的脑袋嗡嗡作响–脑子里全部是直子与绿子鲜活，充满弹性的年轻身体…</p>
<p>咳，我也是抱着纯粹 Case Study 的态度来看的。</p>
<p>今晚重新拿起 <em>《挪威》</em>，顿感物是人非。干净利落的纸质简装书变为了电子精校，喧闹拥挤的教室变为了寂静如水的卧室，懵懂少年头上已经顶着岁月杀刀，于是相同的书也变了味道。</p>
<p>很多原来没有体会的一些细节如潮水一般涌出来—— 直子与绿子鲜活，充满弹性的年轻身体…</p>
<p>咳咳，当然不止这个。</p>
<p>只是想说的太多，却再也不知怎么开口了。</p>
<h2 id="Chapter-_Two">Chapter. Two</h2><p>待续。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Chapter-_One">Chapter. One</h2><p>遇上晚上停电，闲得无聊，打开手机里放置很久的 <em>《挪威的森林》</em> 品读起来。</p>
<p>关于此书的印象早已全部失却，读起来却依然惊人顺畅——5个小时，从头至尾。熄灭手机屏幕，无光]]>
    </summary>
    
      <category term="wheels" scheme="http://v2cc.github.io/categories/wheels/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 软件精选]]></title>
    <link href="http://v2cc.github.io/2014/06/24/software/"/>
    <id>http://v2cc.github.io/2014/06/24/software/</id>
    <published>2014-06-24T12:10:33.000Z</published>
    <updated>2015-08-31T14:58:00.000Z</updated>
    <content type="html"><![CDATA[<p>整理了下 Ubuntu 常用软件，备忘。</p>
<h2 id="Productivity">Productivity</h2><ul>
<li><a href="https://www.google.com/chrome/browser/desktop/" target="_blank" rel="external">Chrome</a> </li>
</ul>
<p>PC， 手机默认浏览器都是 Chrome。如果网络条件能好一点，甚至系统都想用 Chrome OS。</p>
<ul>
<li><a href="https://www.dropbox.com/install" target="_blank" rel="external">DropBox</a></li>
</ul>
<p>由于一些原因，Dropbox 使用比较困难，需要添加 hosts 才能正常使用。</p>
<ul>
<li><a href="https://developer.android.com/sdk/index.html" target="_blank" rel="external">Android Studio &amp; SDK</a></li>
</ul>
<p>安装过程</p>
<ol>
<li><p>Unpack the <code>.tar</code> file where it lays</p>
</li>
<li><p>Using a Terminal window, navigate to that folder location (probably cd ~/Downloads), invoke <code>sudo -i</code> (You will need administrator/su permissions for the next few steps)</p>
</li>
<li><p><code>mv android-studio /opt</code> moves the files you unpacked (requires permissions)</p>
</li>
<li><p><code>gedit android-studio.desktop</code> this opens a text editor so that we may create a shortcut icon to open your new program. Insert the following code, then save the .desktop file.</p>
<p> [Desktop Entry]<br>  Name=Android-Studio<br>  Comment=your comments<br>  Exec=/opt/android-studio/bin/studio.sh<br>  Icon=/opt/android-studio/bin/idea.png<br>  Terminal=false<br>  Type=Application<br>  Categories=Utility;IDE;Development;</p>
</li>
<li><p>To finish up, <code>desktop-file-install android-studio.desktop</code>.</p>
</li>
</ol>
<ul>
<li><a href="https://www.genymotion.com/#!/download" target="_blank" rel="external">Genymotion</a></li>
</ul>
<p>可能是最快的虚拟机，Android 开发必备。</p>
<ul>
<li>Sublime Text 3 &amp; 中文输入补丁</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/sublime-text-<span class="number">3</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure>
<p><a href="http://www.lanmeng.org/2015/05/linux-sublimetext-chinese.html" target="_blank" rel="external">解决Ubuntu(Linux)下Sublime Text 3无法使用中文输入法的问题</a></p>
<ul>
<li>JDK8</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">sudo apt-get install oracle-java8-installer</span><br><span class="line">sudo apt-get install oracle-java8-set-default</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="http://www.syntevo.com/smartgit/" target="_blank" rel="external">Smartgit</a></li>
</ul>
<p>图形化的 Git 客户端，个人 License 免费。</p>
<ul>
<li><a href="https://github.com/hluk/CopyQ/releases" target="_blank" rel="external">CopyQ</a></li>
</ul>
<p>一个剪贴板管理工具。</p>
<ul>
<li><a href="http://cidian.youdao.com/index-linux.html" target="_blank" rel="external">有道词典</a>，<a href="http://pinyin.sogou.com/linux/?r=pinyin" target="_blank" rel="external">搜狗输入法</a></li>
</ul>
<h2 id="Watch_and_play">Watch and play</h2><ul>
<li>Spotify</li>
</ul>
<p>体验非常优秀的音乐社交平台，有了它再也不用发愁音乐的同步问题啦。而且居然广告都能被设计的令人想看了再看！强烈推荐。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">'echo "deb http://repository.spotify.com stable non-free" &gt;&gt; /etc/apt/sources.list.d/spotify.list'</span></span><br><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys <span class="number">94558</span>F59</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install spotify-client</span><br></pre></td></tr></table></figure>
<ul>
<li>Zeal</li>
</ul>
<p>Zeal is an offline documentation browser inspired by Dash, available for Linux and Windows.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:zeal-developers/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install zeal</span><br></pre></td></tr></table></figure>
<ul>
<li>Calibre, VLC, GIMP, OpenShot, Kazam, Stellarium</li>
</ul>
<p><em>Software Center</em></p>
<h2 id="System_tools">System tools</h2><ul>
<li><a href="https://github.com/cyfdecyf/cow" target="_blank" rel="external">Cow</a></li>
</ul>
<p>COW 是一个简化的 HTTP 代理服务器。它能自动检测被墙网站，仅对这些网站使用二级代理。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install curl</span><br><span class="line">curl -L git.io/cow | bash</span><br></pre></td></tr></table></figure>
<ul>
<li>indicator-netspeed-unity</li>
</ul>
<p>用于在状态栏显示实时流量的插件。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:fixnix/netspeed</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install indicator-netspeed-unity</span><br></pre></td></tr></table></figure>
<ul>
<li>Caffeine</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:caffeine-developers/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install caffeine</span><br></pre></td></tr></table></figure>
<ul>
<li>F.lux</li>
</ul>
<p>一个 ‘Keeps Your Eyes Sharp’ 的小工具，通过调节屏幕色温适应各个时间段的光照亮度来保护眼睛。有 Windows 、 MAC 及 Linux 版本，开发者诚意十足。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:kilian/f.lux</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fluxgui</span><br></pre></td></tr></table></figure>
<ul>
<li>VirtualBox</li>
</ul>
<p><em>Software Center</em><br>良好的多平台支持，加上较小的体积，推荐。另需要 USB 等支持的话必须添加用户组，<code>gedit /etc/group</code>，然后添加自己用户名 <code>vboxusers:x:126:steve</code>.</p>
<ul>
<li><a href="http://gnome-look.org/content/show.php/Ambiance+%26+Radiance+Flat+Colors?content=168155" target="_blank" rel="external">Theme - Ambiance &amp; Radiance Flat Colors</a></li>
</ul>
<p>Ambiance &amp; Radiance Flat is a Modern, Beautiful and Vivid Re-imagination of the Ambiance &amp; Radiance Color GTK 2/3 Themes. It features a Modern, Clean And “Flat” look in your choice of 13 vibrant colors. A theme For Ubuntu, Mint Or any Distro and nearly any GTK Desktop.</p>
<ul>
<li>Denyhosts</li>
</ul>
<p>一款 Python 语言的程序，用于分析 sshd 的日志文件。防止 SSH 被暴力扫描破解。</p>
<ul>
<li>FileZilla, Wireshark, Unity Tweak Tool, Supervisor</li>
</ul>
<p><em>Software Center</em></p>
<p>Closed.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>整理了下 Ubuntu 常用软件，备忘。</p>
<h2 id="Productivity">Productivity</h2><ul>
<li><a href="https://www.google.com/chrome/browser/desktop/" target=]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何优雅的使用 Ubuntu 14.04 LTS]]></title>
    <link href="http://v2cc.github.io/2014/06/23/diy-ubuntu/"/>
    <id>http://v2cc.github.io/2014/06/23/diy-ubuntu/</id>
    <published>2014-06-23T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p>大概在 2010 年，我首次接触到 Ubuntu 和 Fedora，尽管因为图形界面、交互等种种原因很快不了了之，但是我对的 Fedora 抱了非常大的期待。记忆小键盘锁定状态等一些在 Windows 上习以为常的细节，只有 Fedora 作了比较好的支持。</p>
<p>最近实在不堪忍受 Windows 上配置 Ruby 等开发环境的繁琐，打算迁移到 Linux 上来，反正 Dota2 for Linux 已经发布，哈。</p>
<p>经历大约半个月的摇摆期，最终确定 Ubuntu 为目标系统。期间折腾过 Fedora, OpenSUSE, Linux Mint 等几个发行版本，感觉 Fedora 改进缓慢，OpenSUSE 软件源不够丰富，Linux Mint 太像 Windows 审美疲劳。</p>
<p>期间出现操作失误导致硬盘全格一次，幸好有备份重要数据到网盘的习惯。不过突然发现 Dropbox 连不上是闹哪样啊，同步自己数据还得翻墙？支持国货也不是这样搞的吧，幸好翻墙技能早已 get。</p>
<p>把这段时间使用下来，能提升自己体验的一些 Ubuntu 14.04 LTS 优化方案整理分享，希望对大家有所帮助。</p>
<h2 id="优化列表目录">优化列表目录</h2><ul>
<li><p><a href="#解决 Ubuntu 屏幕亮度参数不能保存">解决 Ubuntu 屏幕亮度参数不能保存</a></p>
</li>
<li><p><a href="#消除单系统下引导 Ubuntu 时黑色屏幕出现的紫色边框">消除单系统下引导 Ubuntu 时黑色屏幕出现的紫色边框</a></p>
</li>
<li><p><a href="#解决启动中出现 INFO @wl_cfg80211_attach : Registered CFG80211 phy 影响美观的问题">解决启动中出现 INFO @wl_cfg80211_attach : Registered CFG80211 phy 影响美观的问题</a></p>
</li>
<li><p><a href="#Ubuntu 14.04 LTS 英文环境下系统及 Chrome 中字体美化">Ubuntu 14.04 LTS 英文环境下系统及 Chrome 中字体美化</a></p>
</li>
</ul>
<hr>
<h2 id="解决_Ubuntu_屏幕亮度参数不能保存">解决 Ubuntu 屏幕亮度参数不能保存</h2><p>这里不得不吐槽下，我在 10 年初次接触 Ubuntu 就遇到过这个问题，过了 4 年居然还没有得到修复，搜索一下这个问题有接近 6w 的帖子。而红帽系的 Fedora 上这个问题早就解决了…</p>
<p>好了赶快进入正题。</p>
<p>每次登陆 Ubuntu 14.04 LTS 系统时屏幕亮度都为最高，网上能搜索到的几种解决方法要么太复杂要么无效。自己经过尝试提供一种比较好的解决方案。</p>
<p>AMD 显卡的 Ubuntu 14.04 LTS 的亮度设置保存在 <code>/sys/class/backlight/acpi_video0/brightness</code>。每次登陆系统时这个文件都会被重置为最大值，所以直接更改这个文件的值是没用的。</p>
<p>可以用以下两个步骤来让系统启动后自动设置屏幕的亮度值：</p>
<p>第一步，更改 <code>rc.local</code> 文件使系统在启动时自动更改 <code>/sys/class/backlight/acpi_video0/brightness</code> 文件权限。</p>
<p>在终端输入</p>
<pre><code>sudo gedit /etc/rc.<span class="keyword">local</span>
</code></pre><p>如果询问密码的话，输入你安装系统时设置的密码</p>
<p>打开后你会看到如下内容：</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#!/bin/sh -e</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># rc.local</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># This script is executed at the end of each multiuser runlevel.</span></span><br><span class="line"><span class="preprocessor"># Make sure that the script will “exit 0″ on success or any other</span></span><br><span class="line"><span class="preprocessor"># value on error.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># In order to enable or disable this script just change the execution</span></span><br><span class="line"><span class="preprocessor"># bits.</span></span><br><span class="line"><span class="preprocessor">#</span></span><br><span class="line"><span class="preprocessor"># By default this script does nothing.</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#exit 0</span></span><br></pre></td></tr></table></figure>
<p>插入这句话到代码中：</p>
<pre><code>chmod a+w <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/backlight/</span>acpi_video0<span class="regexp">/brightness</span>
</code></pre><p>保证修改后代码如下（注意如果 <code>exit</code> 前有 <code>#</code> 请删除）：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh -e</span><br><span class="line">#</span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># This script is executed at the <span class="operator"><span class="keyword">end</span> <span class="keyword">of</span> <span class="keyword">each</span> multiuser runlevel.</span><br><span class="line"># Make sure that the script will “<span class="keyword">exit</span> <span class="number">0</span>″ <span class="keyword">on</span> <span class="keyword">success</span> <span class="keyword">or</span> <span class="keyword">any</span> other</span><br><span class="line"># <span class="keyword">value</span> <span class="keyword">on</span> <span class="keyword">error</span>.</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">In</span> <span class="keyword">order</span> <span class="keyword">to</span> <span class="keyword">enable</span> <span class="keyword">or</span> <span class="keyword">disable</span> this script just <span class="keyword">change</span> the execution</span><br><span class="line"># bits.</span><br><span class="line">#</span><br><span class="line"># <span class="keyword">By</span> <span class="keyword">default</span> this script does <span class="keyword">nothing</span>.</span><br><span class="line">chmod a+w /<span class="keyword">sys</span>/<span class="keyword">class</span>/backlight/acpi_video0/brightness</span><br><span class="line"><span class="keyword">exit</span> <span class="number">0</span></span></span><br></pre></td></tr></table></figure>
<p>保存退出。</p>
<p>第二步，更改 <code>.profile</code> 文件使系统在用户登录时自动更改 birghtness 的值</p>
<p>进入主文件夹，点击 “查看”，点击 “显示隐藏文件”。找到 <code>.profile</code> 文件，双击打开。</p>
<p>在 <code>.profile</code> 最后一行添加</p>
<pre><code>echo <span class="number">7</span> &gt; <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/backlight/</span>acpi_video0<span class="regexp">/brightness</span>
</code></pre><p><strong>其中数字7为你设定的屏幕亮度值，最大值不同硬件为不同值，可自行尝试。</strong></p>
<p>保存退出。</p>
<p>这样每次进入系统后屏幕的亮度都会自动设置为 <code>.profile</code> 文件中设定的值。此方法的好处是配置保存在个人配置文件里，修改起来非常方便。而且无论睡眠唤醒，还是注销重登陆，亮度设置都能生效。</p>
<hr>
<h2 id="除去_Ubuntu_系统引导时黑色屏幕出现的紫色边框">除去 Ubuntu 系统引导时黑色屏幕出现的紫色边框</h2><p>作为一名出色的强迫症患者，有问题要解决，没有碍问题要创造问题来解决。</p>
<p>所以这个启动是紫框和下面一个出现黑字，纯属没事找事。只是自己看到 Ubuntu 启动时不能像 Windows 一样纯粹，就感觉天崩地裂无法接受。扯远了，这个问题主要有两个方案：</p>
<ol>
<li>更换 grub 主题或背景色</li>
<li>命令修改 grub 参数</li>
</ol>
<p><strong>方案1：</strong></p>
<p>ubuntu开机紫色背景有两个阶段：Grub、Plymouth，我们这里需要修改 Grub 阶段，简单点就是把紫色改为黑色即可。改动这个文件 <code>ubuntu-logo.grub</code> 。</p>
<pre><code>sudo gedit <span class="regexp">/lib/</span>plymouth<span class="regexp">/themes/u</span>buntu-logo<span class="regexp">/ubuntu-logo.grub</span>
</code></pre><p>修改配色参数。</p>
<pre><code>sudo gedit <span class="regexp">/lib/</span>plymouth<span class="regexp">/themes/u</span>buntu-logo<span class="regexp">/ubuntu-logo.grub</span>
</code></pre><p>修改背景色参数。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#原来的紫色</span></span><br><span class="line"><span class="keyword">if</span> background_color <span class="number">44</span>,<span class="number">0</span>,<span class="number">30</span>; then</span><br><span class="line">  clear</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#改成黑色</span></span><br><span class="line"><span class="keyword">if</span> background_color <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>; then</span><br><span class="line"> 	  clear</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>保存后终端执行</p>
<pre><code><span class="title">sudo</span> update-grub
</code></pre><p>至于更换 grub 主题，比较适合比我这种强迫症还 zuo 的同学采用，具体方法自行 Google。</p>
<p><strong>方案2：</strong></p>
<p>如果觉得系统默认的紫色还是挺好看，不想更换，就要用到第二种方法。</p>
<p>Ubuntu 官方的 Bug 专区里给出了临时解决方案。但这个方案可能导致引导时过快跳过 grub 菜单，不过因为我是单系统，所以它对我来说不是一个问题。具体讨论可以参看 <a href="https://bugs.launchpad.net/ubuntu/+source/plymouth/+bug/1289809" target="_blank" rel="external">Grub theme: black screen with purple border</a></p>
<p>临时解决方案如下：</p>
<p>在终端输入</p>
<pre><code>sudo gedit <span class="regexp">/lib/</span>plymouth<span class="regexp">/themes/u</span>buntu-logo<span class="regexp">/ubuntu-logo.grub</span>
</code></pre><p>找到这句话 </p>
<pre><code><span class="keyword">if</span> background_color <span class="number">44</span>,<span class="number">0</span>,<span class="number">30</span>; then clear fi 
</code></pre><p>在 <code>if</code> 后面添加一个 <code>!</code> ，改动后为</p>
<pre><code><span class="keyword">if</span> ！ background_color <span class="number">44</span>,<span class="number">0</span>,<span class="number">30</span>; then clear fi`
</code></pre><p>保存后终端执行</p>
<pre><code><span class="title">sudo</span> update-grub
</code></pre><hr>
<h2 id="解决启动中出现_INFO_@wl_cfg80211_attach_:_Registered_CFG80211_phy_影响美观的问题">解决启动中出现 INFO @wl_cfg80211_attach : Registered CFG80211 phy 影响美观的问题</h2><p>此问题的解决方案同样出自 Ubuntu 官方 Bug 专区，步骤如下：</p>
<p>在终端中执行</p>
<pre><code>sudo gedit <span class="regexp">/etc/i</span>nitramfs-tools<span class="regexp">/conf.d/</span>splash
</code></pre><p>添加这句话</p>
<pre><code><span class="attribute">FRAMEBUFFER</span>=<span class="string">y</span>
</code></pre><p>保存后终端执行</p>
<pre><code>sudo <span class="keyword">update</span>-initramfs -<span class="keyword">u</span>
</code></pre><p><em>注意，此解决方案提供者说可能会轻微影响启动速度。</em></p>
<p>自己测试下来会增加 1-2 秒的开机时间，但是开机过程完美了有没有，强迫症得到了解脱！</p>
<p>具体讨论参看<a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1160322" target="_blank" rel="external">[ 21.125934] INFO @wl_cfg80211_attach : Registered CFG80211 phy</a></p>
<hr>
<h2 id="Ubuntu_14-04_LTS_英文环境下系统及_Chrome_中字体美化">Ubuntu 14.04 LTS 英文环境下系统及 Chrome 中字体美化</h2><p>我习惯使用英文界面，但是又希望看见漂亮的中文字体。但是在這一版更新完语言配置之后却会得到一个预设字体是 <code>标楷体</code> 以及 <code>细明体</code> 的中文显示…</p>
<p>感觉上来说，Ubuntu 的英文字体渲染甚至比 Win8 上还要漂亮。但是中文字体我真的不能忍，字体之难看，而且 Chrome 网页字体还严重发虚!以至于我把眼镜摘戴数次才确认，不是自己眼睛出了毛病。</p>
<p>赶快开始动手解决。因为个人比较喜欢看文泉驿微米黑，所以决定用其替换系统默认的中文字体。 Ubuntu 14.04 LTS 默认不包含文泉驿微米黑字体，我们首先来安装。终端输入</p>
<pre><code>sudo apt-<span class="keyword">get</span> install ttf-wqy-microhei
</code></pre><p>然后把终端的路径指向 <code>/etc/fonts/conf.d</code>，这个路径下保存的就是字体配置文件的软连接。</p>
<pre><code><span class="keyword">cd</span> /etc/fonts/<span class="keyword">conf</span>.<span class="literal">d</span>
</code></pre><p><strong>修改設定檔 <code>65-nonlatin.conf</code> </strong></p>
<p>先修改非拉丁字体的配置文件，加上文泉驿微米黑的设定。</p>
<pre><code>sudo gedit <span class="number">65</span>-nonlatin.conf
</code></pre><p>将 <code>&lt;family&gt;WenQuanYi Micro Hei&lt;/family&gt;</code> 加在 <code>sans-serif</code> 区域里。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">family</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">prefer</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>WenQuanYi Micro Hei<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>Nachlieli<span class="tag">&lt;/<span class="title">family</span>&gt;</span> <span class="comment">&lt;!-- hebrew --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>Lucida Sans Unicode<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line">	......</span><br></pre></td></tr></table></figure>
<p>将 <code>&lt;family&gt;WenQuanYi Micro Hei Mono&lt;/family&gt;</code> 则是加在 <code>monospace</code> 区域里。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">family</span>&gt;</span>monospace<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">prefer</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>WenQuanYi Micro Hei Mono<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>Miriam Mono<span class="tag">&lt;/<span class="title">family</span>&gt;</span> <span class="comment">&lt;!-- hebrew --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">family</span>&gt;</span>VL Gothic<span class="tag">&lt;/<span class="title">family</span>&gt;</span></span><br><span class="line">	......</span><br></pre></td></tr></table></figure>
<p><strong>修改配置文件 <code>69-language-selector-zh-cn.conf</code> </strong></p>
<p>注意，这里因为我的位置设为大陆，所以修改 <code>69-language-selector-zh-cn.conf</code>。如果处于台湾，需要修改的文件为 <code>69-language-selector-zh-tw.conf</code> 。以此类推。</p>
<pre><code>sudo gedit <span class="number">69</span>-<span class="keyword">language</span>-selector-zh-<span class="keyword">cn</span>.<span class="keyword">conf</span>
</code></pre><p>这里 <code>&lt;string&gt;WenQuanYi Micro Hei&lt;/string&gt;</code> 一样是加在 <code>sans-serif</code> 里。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">match</span> <span class="attribute">target</span>=<span class="value">"pattern"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">test</span> <span class="attribute">qual</span>=<span class="value">"any"</span> <span class="attribute">name</span>=<span class="value">"family"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>sans-serif<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"lang"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="title">string</span>&gt;</span>zh-cn<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"prepend"</span> <span class="attribute">binding</span>=<span class="value">"strong"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>WenQuanYi Micro Hei<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>Droid Sans Fallback<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>WenQuanYi Zen Hei<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">		......</span><br></pre></td></tr></table></figure>
<p>而 <code>&lt;string&gt;WenQuanYi Micro Hei Mono&lt;/string&gt;</code> 也是加在 <code>monospace</code> 里。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">match</span> <span class="attribute">target</span>=<span class="value">"pattern"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">test</span> <span class="attribute">qual</span>=<span class="value">"any"</span> <span class="attribute">name</span>=<span class="value">"family"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>monospace<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">test</span> <span class="attribute">name</span>=<span class="value">"lang"</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="title">string</span>&gt;</span>zh-cn<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="title">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"prepend"</span> <span class="attribute">binding</span>=<span class="value">"strong"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>WenQuanYi Micro Hei Mono<span class="tag">&lt;/<span class="title">string</span>&gt;</span> <span class="comment">&lt;!-- add by Steve --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>Droid Sans Fallback<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">string</span>&gt;</span>WenQuanYi Zen Hei Mono<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line">		......</span><br></pre></td></tr></table></figure>
<p><strong>修改 <code>49-sansserif.conf</code> 防止 <code>Chrome</code> 的标签栏及书签栏中文变成乱码</strong></p>
<pre><code>sudo gedit <span class="number">49</span>-sansserif.conf
</code></pre><p>修改最后的 <code>&lt;edit name=&quot;family&quot; mode=&quot;append_last&quot;&gt;</code> 中 <code>sans-serif</code> 为 <code>WenQuanYi Micro Hei</code>。<em>注意整个文件里会看到两个 <code>sans-serif</code> ，修改后后面一个，别改错位置了。</em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">edit</span> <span class="attribute">name</span>=<span class="value">"family"</span> <span class="attribute">mode</span>=<span class="value">"append_last"</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- &lt;string&gt;sans-serif&lt;/string&gt; --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">string</span>&gt;</span>WenQuanYi Micro Hei<span class="tag">&lt;/<span class="title">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">edit</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>保存后终端执行 <code>sudo fc-cache -fv</code> 或是 <code>sudo fc-cache -v</code> ，新字体配置都会立即生效。</p>
<p>Done.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大概在 2010 年，我首次接触到 Ubuntu 和 Fedora，尽管因为图形界面、交互等种种原因很快不了了之，但是我对的 Fedora 抱了非常大的期待。记忆小键盘锁定状态等一些在 Windows 上习以为常的细节，只有 Fedora 作了比较好的支持。</p>
<p>]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何优雅的使用Google Fonts API]]></title>
    <link href="http://v2cc.github.io/2014/06/22/google-fonts-api/"/>
    <id>http://v2cc.github.io/2014/06/22/google-fonts-api/</id>
    <published>2014-06-22T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p>在介绍优雅地使用方法之前，简单提下 Google Fonts API 使用背景，算是对自己刚入门的知识做个总结把。</p>
<h3 id="关于_Google_Fonts_API">关于 Google Fonts API</h3><p>大部分中文网页都有这样一个字体表：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">article</span> <span class="rules">&#123;</span><br><span class="line">	<span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Hiragino Sans GB"</span>, <span class="string">"Microsoft YaHei"</span>, <span class="string">"WenQuanYi Micro Hei"</span>, sans-serif</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>这个字体表的作用是，告诉浏览器网页的最佳中文字体顺序。比如从 vista 开始的 Win 系系统，都内置了 <code>Microsoft YaHei</code>，打开网页后由于没有第一款字体，网页会以雅黑字体显示中字。</p>
<p>但是 vista 之前的系统，默认不包含上述三款中任何一款中文字体，就会以第四个，系统默认字体——也就是 <em>中易宋体</em>（在 Windows 里显示名称为 <em>宋体</em>，英文名 <em>SimSun</em>）——显示中字。</p>
<p>还要考虑到用户使用 MAC、Linux、IOS、Android 等设备浏览页面的显示效果，可见网页的字体显示是一件耗时耗力还很难做到完美的事情。</p>
<p>但是有聪明的人想到了出能一举统一文字显示效果的方法——在网页中内嵌字体，这样就保证了网页在各个平台上一致的文字效果。但带来的问题是一个几 MB 大小的字体文件会严重拖慢网页载入速度，甚至在较差的网络环境下会慢的无法忍受。</p>
<p>在这样的矛盾情况下谷歌公司推出了一个为网站提供高质量字体的通用解决方案， <a href="https://developers.google.com/fonts/" target="_blank" rel="external">Google Fonts API</a>。说的简单点就是免费提供谷歌水准的美观字体，提供谷歌数据中心的带宽加快字体缓存，并以谷歌服务的用户量提高字体缓存的复用率。在保证网站文字的显示质量同时，又最大可能避免影响网站载入速度。</p>
<h3 id="关于优雅">关于优雅</h3><p>看到这里可能有人会想，这么优雅的一个 API，我怎么用都挺优雅，还用得着你来教？<br>所以本文有一个前提——有一堵墙。</p>
<p>6 月开始很多网站开始开始出现了神奇的白屏，角落里有这样一行字</p>
<p><img src="googleapi.png" alt=""></p>
<p>因为谷歌一系列服务被某墙屏蔽，在墙内使用了 Google Fonts API 的网站会出现长时间等待连接谷歌服务器的现象，严重拖慢网站载入速度。</p>
<p>偶然在 <a href="http://zhi.hu/V6zV" target="_blank" rel="external">知乎</a> 看到了 <a href="http://www.zhihu.com/people/Pagecho" target="_blank" rel="external">@高潮，。</a> 提供的解决方案，整理后如下：</p>
<h4 id="1-_最方便的方式">1. 最方便的方式</h4><p>使用国内的字体加速方案 - 360网站卫士推出google字体加速方案<br><a href="http://libs.useso.com/" target="_blank" rel="external">360网站卫士常用前端公共库CDN服务</a></p>
<p>这个方法比较简单，比如你原来 CSS 中使用这个字体</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">import</span> <span class="function">url</span>(http://fonts.googleapis.com/css?family=Galdeano)</span>;</span><br></pre></td></tr></table></figure>
<p>我们只要替换 <code>fonts.googleapis.com</code> 为 <strong>360网站卫士</strong> 提供的 <code>fonts.useso.com</code> 即可。重新打开网站，是不是打开速度已经正常了？</p>
<h4 id="比较谨慎的方式">比较谨慎的方式</h4><p>步骤一：翻墙后，正常挑选字体，然后获取代码，我举例来说，比如</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">link</span> href=<span class="string">'http://fonts.googleapis.com/css?family=Kavoon'</span> rel=<span class="string">'stylesheet'</span> <span class="keyword">type</span>=<span class="string">'text/css'</span>&gt;</span><br></pre></td></tr></table></figure>
<p>步骤二：在 <strong>IE浏览器中（很重要）</strong> 直接访问地址可以得到 css 文件：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">font-face</span></span> <span class="rules">&#123;</span><br><span class="line">	<span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">'Kavoon'</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">font-style</span>:<span class="value"> normal</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">400</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">src</span>:<span class="value"> <span class="function">url</span>(http://themes.googleusercontent.com/static/fonts/kavoon/v1/lk6q1-fY9gR9RCI_NBJrgA.eot)</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">src</span>:<span class="value"> <span class="function">local</span>(<span class="string">'Kavoon Regular'</span>), <span class="function">local</span>(<span class="string">'Kavoon-Regular'</span>), <span class="function">url</span>(http://themes.googleusercontent.com/static/fonts/kavoon/v1/lk6q1-fY9gR9RCI_NBJrgA.eot) <span class="function">format</span>(<span class="string">'embedded-opentype'</span>), <span class="function">url</span>(http://themes.googleusercontent.com/static/fonts/kavoon/v1/ussWlV5djHtZoUnSGGeN3g.woff) <span class="function">format</span>(<span class="string">'woff'</span>)</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>可以看到，有 <code>eot/woff</code> 两个文件。</p>
<p>步骤三：将他们下载并上传到你的服务器，然后修改 css 代码中的字体地址，再保存 css 并调用它就可以了。</p>
<p>但是还没完呢！为什么我提到要用 IE 打开呢？因为访问的地址是可以根据浏览器来判断、加载不同 css 以加载不同格式的字体，如果你用 opera 打开：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">font-face</span></span> <span class="rules">&#123;</span><br><span class="line">	<span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">'Kavoon'</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">font-style</span>:<span class="value"> normal</span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">400</span></span></span>;</span><br><span class="line">	<span class="rule"><span class="attribute">src</span>:<span class="value"> <span class="function">local</span>(<span class="string">'Kavoon Regular'</span>), <span class="function">local</span>(<span class="string">'Kavoon-Regular'</span>), <span class="function">url</span>(http://themes.googleusercontent.com/static/fonts/kavoon/v1/PMzOnY7AcdtckHTJS0S3dQ.ttf) <span class="function">format</span>(<span class="string">'truetype'</span>)</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>比较一下，src 的内容是不同的。前面提供的是 eot 和 woff ，这儿是 ttf。<br>于是，按照步骤三的方法，把 ttf 文件也同样操作，并在刚才的 css 文件中加入它。</p>
<p>最后得到的是：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@font-face</span> &#123;</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">'Kavoon'</span>;</span><br><span class="line">	<span class="attribute">font-style</span>: normal;</span><br><span class="line">	<span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">	<span class="attribute">src</span>: <span class="function">url</span>(<span class="string">http://example.com/font/a.eot</span>);</span><br><span class="line">	<span class="attribute">src</span>: <span class="function">local</span>(<span class="string">'Kavoon Regular'</span>), <span class="function">local</span>(<span class="string">'Kavoon-Regular'</span>), <span class="function">url</span>(<span class="string">http://example.com/font/a.eot</span>) <span class="function">format</span>(<span class="string">'embedded-opentype'</span>), <span class="function">url</span>(<span class="string">http://example.com/font/a.woff</span>) <span class="function">format</span>(<span class="string">'woff'</span>);</span><br><span class="line">	<span class="attribute">src</span>: <span class="function">local</span>(<span class="string">'Kavoon Regular'</span>), <span class="function">local</span>(<span class="string">'Kavoon-Regular'</span>), <span class="function">url</span>(<span class="string">http://src: local('Kavoon Regular'</span>), <span class="function">local</span>(<span class="string">'Kavoon-Regular'</span>), <span class="function">url</span>(<span class="string">http://themes.googleusercontent.com/static/fonts/kavoon/v1/PMzOnY7AcdtckHTJS0S3dQ.ttf</span>) <span class="function">format</span>(<span class="string">'truetype'</span>);<span class="class">.ttf</span>) <span class="tag">format</span>(<span class="string">'truetype'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Done.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在介绍优雅地使用方法之前，简单提下 Google Fonts API 使用背景，算是对自己刚入门的知识做个总结把。</p>
<h3 id="关于_Google_Fonts_API">关于 Google Fonts API</h3><p>大部分中文网页都有这样一个字体表：</]]>
    </summary>
    
      <category term="tools" scheme="http://v2cc.github.io/categories/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Writing]]></title>
    <link href="http://v2cc.github.io/2014/06/20/on-writing/"/>
    <id>http://v2cc.github.io/2014/06/20/on-writing/</id>
    <published>2014-06-20T12:10:33.000Z</published>
    <updated>2015-08-31T19:39:34.480Z</updated>
    <content type="html"><![CDATA[<p>这是 emitting 的第一天。该做个介绍。</p>
<p>建立这个 Blog 的起因，是最近刚把笔记本系统迁移到 Ubuntu 上，查了非常多的资料，也试了很多知识管理软件。<br>记着记着突然想到，是不是可以把自己的经验分享出来。甚至不止经验，为什么不对生活也做些记录？冲动的，恐惧的，无奈的都记录下来。</p>
<p>一直在关注高晓松的『晓说』栏目，里面有一句话触动颇多，“你说你老了有什么可回忆的，你是回忆你一辈子曾经算过的账，还是回忆你一辈子曾经勇敢做出的选择。”<br>我觉着既然自己跟勇敢不搭边，那至少分享下经验与挫折，也算回忆的一部分吧。</p>
<p>所以就有了 <strong>Emitting</strong>。发出声音，传达思想。<br>现在还没有什么内容，给我一点时间。<br>评论功能添加的是 Disqus，不过分享功能比较鸡肋，只能分享到 Facebook 跟 Twitter，看来跟世界接轨的代价就是与国内脱轨:)。还在犹豫是不是用多说评论框架替换。</p>
<p>PS：Blog 架设原平台为 Farbox + Dropbox，非常可惜，二者都是非常有情怀的软件和平台。现在迁移到 Jekyll + Github，感觉架设过程比较 Geek，多次忘记自己是要写 Blog，而沉浸在 diy jekyll themes 上 :)<br>有空会把整个搭建过程整理出来，供大家参考。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这是 emitting 的第一天。该做个介绍。</p>
<p>建立这个 Blog 的起因，是最近刚把笔记本系统迁移到 Ubuntu 上，查了非常多的资料，也试了很多知识管理软件。<br>记着记着突然想到，是不是可以把自己的经验分享出来。甚至不止经验，为什么不对生活也做些记录]]>
    </summary>
    
      <category term="wheels" scheme="http://v2cc.github.io/categories/wheels/"/>
    
  </entry>
  
</feed>
